This is Static information for building SPF dummyMain class::


1) "NORMAL" Method :: onReceive from Class:: fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver

2) "LISTENER" Method :: doInBackground in ScanRunnerBroadcastReceiver$1 that declares in onReceive from Class:: fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver

Find findViewById(#int) method in following code related to ScanRunnerBroadcastReceiver$1

Active Body of this Method in Jimple is::

    public void onReceive(android.content.Context, android.content.Intent)
    {
        fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;
        boolean $z0;
        android.os.Bundle $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;
        fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1 $r8;
        java.lang.Void[] $r9;

        $r0 := @this: fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Received broadcast for scanrunner");

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Not running the tests because the app is not debuggable");

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r4 = virtualinvoke $r2.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r4 != null goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "There were no extras with the broadcast. Include RESULT_PATH");

        return;

     label4:
        $r5 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("RESULT_PATH");

        if $r5 == null goto label5;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label6;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Result write path is null or empty");

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Results will be written to: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", $r7);

        $r8 = new fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1;

        specialinvoke $r8.<fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1: void <init>(fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver,android.content.Context,java.lang.String)>($r0, $r1, $r5);

        $r9 = newarray (java.lang.Void)[0];

        virtualinvoke $r8.<fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1: android.os.AsyncTask execute(java.lang.Object[])>($r9);

        return;
    }


3) "LISTENER" Method :: doInBackground in ScanRunnerBroadcastReceiver$1 that declares in onReceive from Class:: fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver

Find findViewById(#int) method in following code related to ScanRunnerBroadcastReceiver$1

Active Body of this Method in Jimple is::

    public void onReceive(android.content.Context, android.content.Intent)
    {
        fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver $r0;
        android.content.Context $r1;
        android.content.Intent $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;
        boolean $z0;
        android.os.Bundle $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;
        fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1 $r8;
        java.lang.Void[] $r9;

        $r0 := @this: fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: android.content.Intent;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Received broadcast for scanrunner");

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r3.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 != 0 goto label3;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Not running the tests because the app is not debuggable");

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r4 = virtualinvoke $r2.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r4 != null goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "There were no extras with the broadcast. Include RESULT_PATH");

        return;

     label4:
        $r5 = virtualinvoke $r4.<android.os.Bundle: java.lang.String getString(java.lang.String)>("RESULT_PATH");

        if $r5 == null goto label5;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label6;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", "Result write path is null or empty");

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Results will be written to: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ScanRunnerReceiver", $r7);

        $r8 = new fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1;

        specialinvoke $r8.<fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1: void <init>(fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver,android.content.Context,java.lang.String)>($r0, $r1, $r5);

        $r9 = newarray (java.lang.Void)[0];

        virtualinvoke $r8.<fuzion24.device.vulnerability.broadcastreceiver.ScanRunnerBroadcastReceiver$1: android.os.AsyncTask execute(java.lang.Object[])>($r9);

        return;
    }


4) "NORMAL" Method :: getTests from Class:: fuzion24.device.vulnerability.vulnerabilities.VulnerabilityOrganizer

5) "NORMAL" Method :: getTests from Class:: fuzion24.device.vulnerability.vulnerabilities.framework.media.StageFright

6) "NORMAL" Method :: extractAsset from Class:: fuzion24.device.vulnerability.vulnerabilities.helper.BinaryAssets

7) "NORMAL" Method :: extractAsset from Class:: fuzion24.device.vulnerability.vulnerabilities.helper.BinaryAssets


